{"version":3,"sources":["components/MainInfoComp.js","components/players.js","components/data.js","components/games.js","components/teams.js","components/about.js","components/NavBarComp.js","App.js","serviceWorker.js","index.js","images/2pg.jpg","images/formula.PNG"],"names":["MainInfoComp","contentStyles","marginTop","display","margin","width","maxWidth","backgroundColor","className","style","id","jusitfyContent","flexWrap","alt","marginBottom","src","formulaCode","twoPointer","PlayerComp","DataComp","GameComp","TeamComp","AboutComp","NavBarComp","state","isOpen","toggleCollapse","setState","noMatchingPathStyles","textAlign","basename","color","dark","expand","to","onClick","this","navbar","left","exact","path","component","GamesComp","location","Component","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.46942eaa.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n// images\r\nimport twoPointer from '../images/2pg.jpg'\r\nimport formulaCode from '../images/formula.PNG'\r\n\r\n\r\nfunction MainInfoComp() {\r\n\r\n    const contentStyles = {\r\n        marginTop: '25px' ,\r\n        display: 'block' , \r\n        margin: 'auto' ,\r\n        width: '80%' ,\r\n        maxWidth: '1000px' ,\r\n        backgroundColor:'white'\r\n    };\r\n\r\n    const imageContainerStyles = {\r\n      display:'flex',\r\n      jusitfyContent:'spaceBetween',\r\n      flexWrap: 'wrap'\r\n    };\r\n\r\n    const formulaStyles = {\r\n      display:'block',\r\n      margin:'auto',\r\n      maxWidth: '500px',\r\n      marginBottom: '25px',\r\n      width:'90%'\r\n    };\r\n\r\n    const twoPointerStyles ={\r\n      display:'block',\r\n      margin:'auto',\r\n      maxWidth: '400px',\r\n      width:'90%'\r\n    };\r\n\r\n    const containerContainerStyles = {\r\n      maxWidth: '950px',\r\n      display:'block',\r\n      margin:'auto'\r\n    };\r\n\r\n  return (    \r\n    <div className=\"MainInfo\" >\r\n      \r\n      <Card style={contentStyles}>\r\n        <CardContent>\r\n        Unlike youth, high school and collegiate lacrosse, professional \r\n      field lacrosse leagues have created a \" two point line \". If a \r\n      player stands behind this line when shooting, a goal is worth two \r\n      points instead of one. Effective Shooting Percentage (ES%) is a new \r\n      lacrosse statistic that accounts for the fact that a two point goal \r\n      is worth more than a one point goal. The forumla for ES% is shown below: \r\n        </CardContent>\r\n      </Card>\r\n\r\n\r\n      <br></br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n      <div id =\"containerContainer\" style ={containerContainerStyles}>\r\n      <div id =\"imageContainer\" style ={imageContainerStyles}>\r\n          <img alt=\"ES% formula from es%.py\" style={formulaStyles} src={formulaCode}/>\r\n          <img alt=\"Two point shot attempt\" style={twoPointerStyles} src={twoPointer}/> \r\n      </div>\r\n      </div>\r\n      <br></br><br></br>\r\n\r\n      <Card style={contentStyles}>\r\n        <CardContent>\r\n        ES% is inspired by a relatively new and powerful statistic in basketball called \r\n      effective field goal percentage ( EFG% ). EFG% accounts for the fact that three point \r\n      shots are worth more than two point shots. EFG% has been a significant predicator of a teams \r\n      offensive performance: for example in 2013, the Miami Heat and San Antonio Spurs had the highest \r\n      EFG% and in the league and ended up meeting in the NBA finals that year. This project aims to \r\n      explore if a similar relationship between scoring efficiency and team/player success exists in professional lacrosse.\r\n        </CardContent>\r\n      </Card>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MainInfoComp;\r\n","import React from 'react';\r\n\r\nfunction PlayerComp() {\r\n  return(  <h1> Template Players Comp </h1> );  \r\n}\r\n\r\n\r\nexport default PlayerComp;\r\n","import React from 'react';\r\n\r\nfunction DataComp() {\r\n  return(  <h1> Template Data Comp </h1> );  \r\n}\r\n\r\n\r\nexport default DataComp;\r\n","import React from 'react';\r\n\r\nfunction GameComp() {\r\n  return(  <h1> Template Game Comp </h1> );  \r\n}\r\n\r\n\r\nexport default GameComp;\r\n","import React from 'react';\r\n\r\nfunction TeamComp() {\r\n  return(  <h1> Template team Comp </h1> );  \r\n}\r\n\r\n\r\nexport default TeamComp;\r\n","import React from 'react';\r\n\r\nfunction AboutComp() {\r\n  return(  <h1> Template About Comp </h1> );  \r\n}\r\n\r\n\r\nexport default AboutComp;\r\n","import React, { Component } from \"react\";\r\nimport {\r\nMDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, \r\nMDBNavLink, MDBNavbarToggler, MDBCollapse\r\n} from \"mdbreact\";\r\nimport MainInfoComp from './MainInfoComp';\r\nimport PlayerComp from './players'\r\nimport DataComp from './data'\r\nimport GamesComp from './games'\r\nimport TeamComp from './teams'\r\nimport AboutComp from './about'\r\nimport { HashRouter as Router , Route, Switch, } from 'react-router-dom';\r\n\r\nclass NavBarComp extends Component {\r\n\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\n\r\n\r\nrender() {\r\n    const navBarStyles = {\r\n        marginBottom:'20px'\r\n    }\r\n\r\n    const noMatchingPathStyles = {\r\n      width:'80%',\r\n      display:'block',\r\n      margin:'auto',\r\n      textAlign:'center'\r\n    }\r\n\r\n    const noMatchingPath = ({location}) =>\r\n    (\r\n      <div style={noMatchingPathStyles}>\r\n          <strong><h1> 404 error page not found <br></br><br></br> use the navbar above to find a page </h1></strong>\r\n      </div>\r\n    )\r\n\r\n  return (\r\n    <Router  basename={'/effectiveShootingPercentage'}  >\r\n      <MDBNavbar color=\"indigo\" dark expand=\"md\" style={navBarStyles}>\r\n        <MDBNavbarBrand>\r\n        <MDBNavLink to=\"/\"><strong className=\"white-text\">Effective Shooting%</strong></MDBNavLink>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem >\r\n              <MDBNavLink to=\"/players\">Players</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/teams\">Teams</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/games\">Games</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/data\">Data</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/about\">About</MDBNavLink>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" component={MainInfoComp} />\r\n        <Route exact path='/players' component={PlayerComp} />\r\n        <Route exact path='/data' component={DataComp} />\r\n        <Route exact path=\"/teams\" component={TeamComp} />\r\n        <Route exact path='/games' component={GamesComp} />\r\n        <Route exact path='/about' component={AboutComp} />\r\n        <Route component={noMatchingPath}></Route>\r\n      </Switch>\r\n\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default NavBarComp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport MainInfoComp from './components/MainInfoComp';\r\nimport NavBarComp from './components/NavBarComp';\r\nimport TestComp from './components/players';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBarComp />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//NEED FOR MATERIAL DESIGN \nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/2pg.90099611.jpg\";","module.exports = __webpack_public_path__ + \"static/media/formula.d6730715.PNG\";"],"sourceRoot":""}